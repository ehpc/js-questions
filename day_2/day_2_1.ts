var val = Promise.resolve(1);

var arr = [1, 2, 3];

for (var i = 0; i < arr.length; ++i) {
  val = val.then((val) => val + arr[i]);
}

val.then(console.log); // NaN

/*
var i создаёт переменную в области видимости внешней функции, таким образом,
значение переменной всегда одно и то же для всех вызовов then. В данном 
случае сначала цикл завершается, i === 3. Потом начинают выполняться 
микротаски, вызываться колбэки then. Происходит сложение 1 + arr[3], что 
равнозначно 1 + undefined == NaN. Затем в следующему колбэке 
NaN + undefined == NaN и т.д. В итоге, получаем NaN.

В случае использования let, для каждой итерации цикла фиксируется новая 
лексическая среда с текущим значением переменной цикла согласно
спецификации 14.7.5.7 ForIn/OfBodyEvaluation.
*/
